apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"


android {

    configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support' && !details.requested.name.startsWith("multidex")) {
                details.useVersion "$rootProject.ext.supportLibraryVersion"
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("${rootProject.projectDir}/brakaiKeystore.jks")
            storePassword "Battlefield003"
            keyAlias "brakai"
            keyPassword "Battlefield003"
        }
    }

    compileSdkVersion Integer.parseInt("$rootProject.ext.compileSdkVersion")
    defaultConfig {
        applicationId "com.example.kbrakai.nextepisode"
        minSdkVersion Integer.parseInt("$rootProject.ext.minSdkVersion")
        targetSdkVersion Integer.parseInt("$rootProject.ext.minSdkVersion")
        def versionPropsFile = file("${rootProject.projectDir}/version.properties")
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            versionCode code
        } else {
            throw new GradleException("Could not read version.properties!")
        }
        versionName project.property("VERSION_NUMBER")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

    }
    buildTypes {
        release {

            minifyEnabled false
            debuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {

            minifyEnabled false
            debuggable true
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"

    // Support libs
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:1.1.2"
    implementation 'androidx.core:core-ktx:0.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"

    def lifecycle_version = "2.0.0-alpha1"
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.13'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.mtramin:rxfingerprint:2.2.1'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.moshi:moshi:1.6.0'

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$nav_version"

    //room
    def room_version = "2.0.0-alpha1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockito"
    testImplementation "org.powermock:powermock-api-mockito:$powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"

    implementation 'com.github.alamkanak:android-week-view:1.2.6'

    //dagger 2
    implementation 'com.google.dagger:dagger:2.13'
    kapt 'com.google.dagger:dagger-compiler:2.13'

    //paging
    def paging_version = "2.0.0-alpha1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$paging_version"

    //data binding
    kapt 'com.android.databinding:compiler:3.1.3'

}
